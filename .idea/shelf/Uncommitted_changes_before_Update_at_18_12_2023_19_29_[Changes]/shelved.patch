Index: src/main/java/Server/AudioPlayer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Server;\r\n\r\nimport java.io.File;\r\nimport java.util.LinkedList;\r\nimport java.util.Queue;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\n\r\npublic class AudioPlayer {\r\n\r\n    private AudioPlayerThread playerThread;\r\n    private Queue<File> playlist = new LinkedList<>();\r\n    private File currentFile;\r\n    private ExecutorService executorService;\r\n\r\n    public AudioPlayer() {\r\n        executorService = Executors.newSingleThreadExecutor();\r\n    }\r\n\r\n    public void addToPlaylist(File file) {\r\n        playlist.add(file);\r\n    }\r\n\r\n    public void play() {\r\n        if (!playlist.isEmpty()) {\r\n            currentFile = playlist.poll();\r\n            playFile(currentFile);\r\n        } else {\r\n            System.out.println(\"Очередь воспроизведения пуста.\");\r\n        }\r\n    }\r\n\r\n    public void playNext() {\r\n        if (!playlist.isEmpty()) {\r\n            stopPlayback();\r\n            currentFile = playlist.poll();\r\n            playFile(currentFile);\r\n        } else {\r\n            System.out.println(\"Очередь воспроизведения пуста.\");\r\n        }\r\n    }\r\n\r\n    public void playPrevious() {\r\n        if (currentFile != null) {\r\n            playlist.add(currentFile);\r\n            stopPlayback();\r\n            if (!playlist.isEmpty()) {\r\n                currentFile = playlist.poll();\r\n                playFile(currentFile);\r\n            } else {\r\n                System.out.println(\"Очередь воспроизведения пуста.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public void start() {\r\n        if (playerThread == null)\r\n        {\r\n            currentFile = playlist.poll();\r\n            if (currentFile != null) {\r\n                playerThread = new AudioPlayerThread(currentFile);\r\n                executorService.submit(playerThread);\r\n            } else {\r\n                System.out.println(\"Очередь воспроизведения пуста.\");\r\n            }\r\n        } else {\r\n            System.out.println(\"Воспроизведение уже запущено.\");\r\n        }\r\n    }\r\n\r\n    public void stop() {\r\n        stopPlayback();\r\n        System.out.println(\"Воспроизведение остановлено.\");\r\n    }\r\n\r\n    public boolean isPlaying() {\r\n        return playerThread != null && playerThread.isPlaying();\r\n    }\r\n\r\n    private void playFile(File file) {\r\n        if (file != null) {\r\n            playerThread = new AudioPlayerThread(file);\r\n            executorService.submit(playerThread);\r\n        } else {\r\n            System.out.println(\"Не удалось воспроизвести трек.\");\r\n        }\r\n    }\r\n\r\n    private void stopPlayback() {\r\n        if (playerThread != null) {\r\n            playerThread.stopPlayback();\r\n            playerThread = null;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Server/AudioPlayer.java b/src/main/java/Server/AudioPlayer.java
--- a/src/main/java/Server/AudioPlayer.java	(revision dcec17c71495110cf2c8c2f870f5fc7786d81f82)
+++ b/src/main/java/Server/AudioPlayer.java	(date 1702916901529)
@@ -92,4 +92,13 @@
             playerThread = null;
         }
     }
+
+    public void seek(int value) {
+        if (playerThread != null) {
+            playerThread.seek(value);
+        }
+    }
+
+    public void playLast() {
+    }
 }
Index: src/main/java/GUI/AudioPlayerGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\r\n\r\nimport Server.AudioPlayer;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.io.File;\r\n\r\npublic class AudioPlayerGUI {\r\n\r\n    private AudioPlayer audioPlayer;\r\n    private JButton startStopButton;\r\n    private JButton nextButton;\r\n    private JButton prevButton;\r\n\r\n    public AudioPlayerGUI() {\r\n        audioPlayer = new AudioPlayer();\r\n        createAndShowGUI();\r\n    }\r\n\r\n    private void createAndShowGUI() {\r\n        JFrame frame = new JFrame(\"Audio Player\");\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\r\n        JPanel panel = new JPanel();\r\n\r\n        startStopButton = new JButton(\"Start\");\r\n        startStopButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                handleStartStopButton();\r\n            }\r\n        });\r\n\r\n        nextButton = new JButton(\"Next\");\r\n        nextButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                audioPlayer.playNext();\r\n            }\r\n        });\r\n\r\n        prevButton = new JButton(\"Previous\");\r\n        prevButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                audioPlayer.playPrevious();\r\n            }\r\n        });\r\n\r\n        panel.add(startStopButton);\r\n        panel.add(nextButton);\r\n        panel.add(prevButton);\r\n\r\n        JButton addTrackButton = new JButton(\"Add Track\");\r\n        addTrackButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                handleAddTrackButton();\r\n            }\r\n        });\r\n        panel.add(addTrackButton);\r\n\r\n        frame.getContentPane().add(panel);\r\n        frame.setSize(400, 150);\r\n        frame.setLocationRelativeTo(null);\r\n        frame.setVisible(true);\r\n    }\r\n\r\n    private void handleStartStopButton() {\r\n        if (audioPlayer.isPlaying()) {\r\n            audioPlayer.stop();\r\n            startStopButton.setText(\"Start\");\r\n        } else {\r\n            audioPlayer.start();\r\n            startStopButton.setText(\"Stop\");\r\n        }\r\n    }\r\n\r\n    private void handleAddTrackButton() {\r\n        JFileChooser fileChooser = new JFileChooser();\r\n        int result = fileChooser.showOpenDialog(null);\r\n\r\n        if (result == JFileChooser.APPROVE_OPTION) {\r\n            File selectedFile = fileChooser.getSelectedFile();\r\n            audioPlayer.addToPlaylist(selectedFile);\r\n            JOptionPane.showMessageDialog(null, \"Track added to the playlist: \" + selectedFile.getName());\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        SwingUtilities.invokeLater(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                new AudioPlayerGUI();\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/GUI/AudioPlayerGUI.java b/src/main/java/GUI/AudioPlayerGUI.java
--- a/src/main/java/GUI/AudioPlayerGUI.java	(revision dcec17c71495110cf2c8c2f870f5fc7786d81f82)
+++ b/src/main/java/GUI/AudioPlayerGUI.java	(date 1702916901524)
@@ -3,6 +3,8 @@
 import Server.AudioPlayer;
 
 import javax.swing.*;
+import javax.swing.event.ChangeEvent;
+import javax.swing.event.ChangeListener;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.io.File;
@@ -13,6 +15,10 @@
     private JButton startStopButton;
     private JButton nextButton;
     private JButton prevButton;
+    private JButton addTrackButton;
+    private JSlider progressBar;
+    private JLabel timeLabel;
+    private JTextField searchField; // Добавлено поле для ввода строки поиска
 
     public AudioPlayerGUI() {
         audioPlayer = new AudioPlayer();
@@ -49,21 +55,51 @@
             }
         });
 
-        panel.add(startStopButton);
-        panel.add(nextButton);
-        panel.add(prevButton);
-
-        JButton addTrackButton = new JButton("Add Track");
+        addTrackButton = new JButton("Add Track");
         addTrackButton.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 handleAddTrackButton();
             }
         });
+
+        progressBar = new JSlider();
+        progressBar.setMinimum(0);
+        progressBar.setMaximum(100);
+        progressBar.setValue(0);
+        progressBar.addChangeListener(new ChangeListener() {
+            @Override
+            public void stateChanged(ChangeEvent e) {
+                if (!progressBar.getValueIsAdjusting()) {
+                    int value = progressBar.getValue();
+                    audioPlayer.seek(value);
+                }
+            }
+        });
+
+        timeLabel = new JLabel("0:00");
+
+        searchField = new JTextField(20); // 20 - количество символов в поле для ввода
+        searchField.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                handleSearch();
+            }
+        });
+
+        panel.add(startStopButton);
+        panel.add(prevButton);
+        panel.add(nextButton);
         panel.add(addTrackButton);
+        panel.add(progressBar);
+        panel.add(timeLabel);
+
+        // Добавлен переход на новую строку
+        panel.add(Box.createVerticalStrut(10)); // Вертикальный отступ
+        panel.add(searchField); // Добавлено поле для ввода строки поиска
 
         frame.getContentPane().add(panel);
-        frame.setSize(400, 150);
+        frame.setSize(400, 200);
         frame.setLocationRelativeTo(null);
         frame.setVisible(true);
     }
@@ -89,6 +125,12 @@
         }
     }
 
+    private void handleSearch() {
+        // Реализуйте логику поиска музыкальных произведений на основе введенной строки
+        String searchText = searchField.getText();
+        // Ваш код для обработки строки поиска
+    }
+
     public static void main(String[] args) {
         SwingUtilities.invokeLater(new Runnable() {
             @Override
Index: src/main/java/Server/AudioPlayerThread.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Server;\r\n\r\nimport javazoom.jl.decoder.Bitstream;\r\nimport javazoom.jl.decoder.JavaLayerException;\r\nimport javazoom.jl.player.advanced.AdvancedPlayer;\r\nimport javazoom.jl.player.advanced.PlaybackEvent;\r\nimport javazoom.jl.player.advanced.PlaybackListener;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\n\r\npublic class AudioPlayerThread extends Thread {\r\n\r\n    private File file;\r\n    private boolean playing;\r\n    private AdvancedPlayer player;\r\n\r\n    public AudioPlayerThread(File file) {\r\n        this.file = file;\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        try (FileInputStream fileInputStream = new FileInputStream(file)) {\r\n            Bitstream bitstream = new Bitstream(fileInputStream);\r\n            long duration = bitstream.readFrame().calculate_framesize();\r\n\r\n            player = new AdvancedPlayer(fileInputStream);\r\n\r\n            player.setPlayBackListener(new PlaybackListener() {\r\n                @Override\r\n                public void playbackFinished(PlaybackEvent evt) {\r\n                    System.out.println(\"Воспроизведение завершено: \" + file.getName());\r\n                    playing = false;\r\n                }\r\n            });\r\n\r\n            System.out.println(\"Воспроизведение: \" + file.getName());\r\n            playing = true;\r\n            player.play();\r\n\r\n        } catch (JavaLayerException | IOException e) {\r\n            e.printStackTrace();\r\n            playing = false;\r\n        } finally {\r\n            if (player != null) {\r\n                player.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    public void stopPlayback() {\r\n        if (playing) {\r\n            player.close();\r\n            playing = false;\r\n        }\r\n    }\r\n\r\n    public boolean isPlaying() {\r\n        return playing;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Server/AudioPlayerThread.java b/src/main/java/Server/AudioPlayerThread.java
--- a/src/main/java/Server/AudioPlayerThread.java	(revision dcec17c71495110cf2c8c2f870f5fc7786d81f82)
+++ b/src/main/java/Server/AudioPlayerThread.java	(date 1702916901531)
@@ -60,4 +60,7 @@
     public boolean isPlaying() {
         return playing;
     }
+
+    public void seek(int value) {
+    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"78b969dd-ac0d-4048-9384-e5d560457ed6\" name=\"Changes\" comment=\"Реализован примитивное воспроизведение треков\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Server/AudioController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Server/AudioController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Server/AudioPlayer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Server/AudioPlayer.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2ZCg63m5TFpRX29JD51FR5fn3HR\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;F:/Labs/Repos/SoundCloud_coursework&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;spring.configuration.checksum&quot;: &quot;567a85cd9f4699c6154830a519cdc8cf&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"F:\\Labs\\Repos\\SoundCloud_coursework\\src\\main\\resources\\audio\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.AudioPlayerGUI\">\r\n    <configuration name=\"AudioController\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Server.AudioController\" />\r\n      <module name=\"SoundCloud_coursework\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Server.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"AudioPlayerGUI\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"GUI.AudioPlayerGUI\" />\r\n      <module name=\"SoundCloud_coursework\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"GUI.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"SoundCloud_coursework\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"Server.Main\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Server.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.AudioPlayerGUI\" />\r\n        <item itemvalue=\"Application.AudioController\" />\r\n        <item itemvalue=\"Spring Boot.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"78b969dd-ac0d-4048-9384-e5d560457ed6\" name=\"Changes\" comment=\"\" />\r\n      <created>1701931298707</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1701931298707</updated>\r\n      <workItem from=\"1701931300131\" duration=\"941000\" />\r\n      <workItem from=\"1701960945770\" duration=\"437000\" />\r\n      <workItem from=\"1701969276890\" duration=\"29000\" />\r\n      <workItem from=\"1702326828946\" duration=\"598000\" />\r\n      <workItem from=\"1702389581911\" duration=\"5099000\" />\r\n      <workItem from=\"1702402572544\" duration=\"4420000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Initial commit\">\r\n      <created>1701931371767</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701931371767</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Реализован примитивное воспроизведение треков\">\r\n      <created>1702392118768</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702392118768</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Initial commit\" />\r\n    <MESSAGE value=\"Реализован примитивное воспроизведение треков\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Реализован примитивное воспроизведение треков\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision dcec17c71495110cf2c8c2f870f5fc7786d81f82)
+++ b/.idea/workspace.xml	(date 1702916901522)
@@ -5,9 +5,13 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="78b969dd-ac0d-4048-9384-e5d560457ed6" name="Changes" comment="Реализован примитивное воспроизведение треков">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_07_12_2023_17_41__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_07_12_2023_17_41__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/GUI/AudioPlayerGUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/GUI/AudioPlayerGUI.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/Server/AudioController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Server/AudioController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/Server/AudioPlayer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Server/AudioPlayer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Server/AudioPlayerThread.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Server/AudioPlayerThread.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -32,6 +36,9 @@
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 4
+}</component>
   <component name="ProjectId" id="2ZCg63m5TFpRX29JD51FR5fn3HR" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true">
     <ConfirmationsSetting value="1" id="Add" />
@@ -49,7 +56,8 @@
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;last_opened_file_path&quot;: &quot;F:/Labs/Repos/SoundCloud_coursework&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;dev&quot;,
+    &quot;last_opened_file_path&quot;: &quot;E:/UNIVERSITY/курсовая 2/Soudcloud_coursework&quot;,
     &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
     &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
     &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
@@ -76,6 +84,8 @@
       </method>
     </configuration>
     <configuration name="AudioPlayerGUI" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="ALTERNATIVE_JRE_PATH" value="20" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
       <option name="MAIN_CLASS_NAME" value="GUI.AudioPlayerGUI" />
       <module name="SoundCloud_coursework" />
       <extension name="coverage">
@@ -105,7 +115,6 @@
       <list>
         <item itemvalue="Application.AudioPlayerGUI" />
         <item itemvalue="Application.AudioController" />
-        <item itemvalue="Spring Boot.Main" />
       </list>
     </recent_temporary>
   </component>
@@ -145,6 +154,21 @@
     <option name="version" value="3" />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
+    <option name="RECENT_FILTERS">
+      <map>
+        <entry key="User">
+          <value>
+            <list>
+              <RecentGroup>
+                <option name="FILTER_VALUES">
+                  <option value="*" />
+                </option>
+              </RecentGroup>
+            </list>
+          </value>
+        </entry>
+      </map>
+    </option>
     <option name="TAB_STATES">
       <map>
         <entry key="MAIN">
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_X\" default=\"true\" project-jdk-name=\"19\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision dcec17c71495110cf2c8c2f870f5fc7786d81f82)
+++ b/.idea/misc.xml	(date 1702916901520)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="19" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" project-jdk-name="20" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
diff --git a/src/main/java/Server/AudioController.java b/src/main/java/Server/AudioController.java
deleted file mode 100644
